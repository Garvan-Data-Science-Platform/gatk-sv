#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright Â© 2022 The Broad Institute of M.I.T. and Harvard
# Distributed under terms of the MIT license.
# Contact: Ryan Collins <rlcollins@g.harvard.edu>

"""
Sums SV counts per SVTYPE per sample across multiple input .tsvs 
generated by svtk count-svtypes

Replacement for sum_svcounts_perSample.R
"""


import argparse
import csv
from sys import stdout


def main():
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('input_tsvs', nargs='+', help='One or more .tsvs ' +
                        'generated by svtk count-svtypes')
    args = parser.parse_args()

    # Process inputs in serial
    res = {}
    for in_tsv in args.input_tsvs:
        with open(in_tsv) as fin:
            for sample, svtype, k, contig in csv.reader(fin, delimiter='\t'):
                
                # Skip header line if present
                if sample == 'sample':
                    continue

                # Otherwise, add row to results dictionary
                if sample not in res.keys():
                    res[sample] = {}
                if svtype in res[sample].keys():
                    res[sample][svtype] += int(k)
                else:
                    res[sample][svtype] = int(k)

    # Write output
    stdout.write('\t'.join('sample svtype count'.split()) + '\n')
    for sample, svdict in res.items():
        for svtype, n in svdict.items():
            stdout.write('\t'.join([sample, svtype, str(n)]) + '\n')


if __name__ == '__main__':
    main()

